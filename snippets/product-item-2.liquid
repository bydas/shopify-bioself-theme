<script
  charset="utf-8"
  src="https://cl.avis-verifies.com/pt/cache/3/0/b/30b17f6b-db4c-0c24-0d69-c5635e2a1e35/AWS/PRODUCT_API/tag.min.js"
  defer
></script>

<style>
  .image_and_div_wrapper {
    display: grid;
    position: relative;
    padding: 2rem 0;
  }

  form {
    display: grid;
    align-items: end;
  }

  .no_reviews_stars {
    display: none;
  }

  .product_item_custom {
    display: grid;
    grid-template-rows: 1fr max-content;
    border: 1px solid #308a36;
    border-radius: 0.65rem;
  }

  .product_item_custom > .custom_link_product {
    display: grid;
    grid-template-rows: max-content 1fr max-content max-content max-content max-content;
    gap: 0.125rem;
    padding: 1rem 1rem 0 1rem;
  }

  .product_header_custom {
    display: grid;
    grid-auto-columns: max-content;
    grid-auto-flow: column;
    gap: 1rem;
    justify-content: space-between;
    align-items: center;
  }

  .product_header_custom > div {
    display: grid;
    background-color: #ffbb12;
    padding: 0.5rem 0.75rem;
    border-radius: 0 0 0.5rem 0.5rem;
  }

  .product_header_custom > div > * {
    color: black;
    font-weight: 900 !important;
    text-transform: uppercase;
    margin: 0;
  }

  .product_header_custom > div > h4 {
    font-size: 1.65rem;
    line-height: 1.2rem;
  }

  .product_header_custom > div > h6 {
    font-size: 0.85rem;
    line-height: 1rem;
  }

  .product_item_custom > .custom_link_product > .product_header_custom > .label_custom {
    font-weight: 700 !important;
    padding: 0.25rem 2rem;
    background-color: #ffbb12;
    border-radius: 2rem;
    width: max-content;
    font-size: 15px;
  }

  .product_item_custom > .custom_link_product > .image_and_div_wrapper > img {
    place-self: center;
  }

  @media screen and (max-width: 1599px) {
    .product_header_custom > div > h4 {
      font-size: 1.35rem;
    }

    .product_header_custom > div > h6 {
      font-size: 0.75rem;
    }
  }

  @media screen and (max-width: 1599px) and (min-width: 1000px) {
    .product_item_custom > .custom_link_product > h1,
    .product_item_custom > .custom_link_product > #prices_custom > h3 {
      font-size: 14px !important;
    }

    .product_item_custom > form > button > span,
    #notify_button_custom {
      font-size: 12px !important;
    }

    .product_item_custom > .custom_link_product > #pvp_custom {
      font-size: 13px !important;
    }

    .product_item_custom > .custom_link_product > .product_header_custom > .label_custom {
      font-size: 13px !important;
      padding: 0.2rem 1.5rem !important;
    }

    .product_item_custom > .custom_link_product > #prices_custom > h2 {
      font-size: 20px !important;
    }

    #product_collection_with_image > div > a > div > div > span:nth-child(2) {
      font-size: 22px !important;
    }

    #product_collection_with_image > div > a > div > div > span:nth-child(1) {
      font-size: 16px !important;
    }
  }

  .product_item_custom > .custom_link_product > h1 {
    margin: 0;
    font-size: 16px;
    line-height: normal;
  }

  .product_item_custom > .custom_link_product > #ratings_custom {
    display: grid;
    grid-template-columns: repeat(2, max-content);
    gap: 0.5rem;
  }

  .product_item_custom > .custom_link_product > #ratings_custom > ul {
    display: grid;
    grid-template-columns: repeat(5, max-content);
    gap: 0.125rem;
    list-style-type: none;
  }

  .product_item_custom > .custom_link_product > #ratings_custom > span {
    font-size: 14px;
    line-height: normal;
  }

  .product_item_custom > .custom_link_product > #prices_custom {
    display: grid;
    grid-template-columns: repeat(2, max-content);
    gap: 0.65rem;
    align-items: center;
  }

  .product_item_custom > .custom_link_product > #prices_custom > h2 {
    margin: 0;
    font-size: 24px;
    color: #308a36;
    line-height: normal;
  }

  .product_item_custom > .custom_link_product > #prices_custom > h3 {
    margin: 0;
    font-size: 16px;
    line-height: normal;
    text-decoration: line-through;
    align-self: end;
  }

  .product_item_custom > .custom_link_product > #pvp_custom {
    font-size: 14px;
    font-weight: 500;
  }

  .product_item_custom > form > button,
  .product_item_custom > #custom_specific_product {
    display: grid;
    grid-template-columns: repeat(2, max-content);
    justify-content: center;
    align-items: center;
    text-align: center;
    color: white;
    border-radius: 0.65rem;
    border: none;
    background-color: #308a36;
    padding: 0.75rem 1rem;
    gap: 1rem;
    font-weight: 600 !important;
    height: max-content;
    font-size: 14px;
    margin: 0.5rem 1rem 1rem 1rem;
    transition: all 0.15s ease;
  }

  .product_item_custom > form > button:hover,
  .product_item_custom > #custom_specific_product:hover {
    background-color: #ffbb12;
    color: black;
  }

  #notify_button_custom {
    display: grid;
    grid-template-columns: repeat(2, max-content);
    justify-content: center;
    align-items: center;
    gap: 1rem;
    margin: 1rem;
    height: max-content;
    text-align: center;
    border-radius: 0.5rem;
    border: none;
    padding: 0.75rem 1rem;
    align-self: end;
    line-height: normal;
    font-weight: 600 !important;
    font-size: 14px;
    transition: all 0.15s ease;
  }

  #notify_button_custom:hover {
    opacity: 70%;
  }

  @media screen and (max-width: 1000px) {
    .product_item_custom > form > button,
    .product_item_custom > #custom_specific_product,
    #notify_button_custom {
      padding: 0.75rem 1rem !important;
      min-height: 41px;
    }
  }

  .product_item_custom > form > button > svg {
    width: 18px;
    height: 18px;
  }

  .product_item_custom > form > button > span,
  #notify_button_custom {
    font-size: 14px;
    text-transform: uppercase;
    line-height: normal;
  }

  @media screen and (max-width: 430px) {
    .product_item_custom > .custom_link_product > h1,
    .product_item_custom > .custom_link_product > #prices_custom > h3 {
      font-size: 14px;
    }

    .product_item_custom > .custom_link_product > #prices_custom > h2 {
      font-size: 18px;
    }

    .product_item_custom > form > button > span,
    #notify_button_custom {
      font-size: 13px;
    }

    .product_item_custom > form > button > svg,
    #notify_button_custom > svg {
      width: 16px;
      height: 16px;
    }

    .product_item_custom > .custom_link_product > #pvp_custom,
    .netreviews_bg_stars div,
    .netreviews_review_rate_and_stars div,
    .product_item_custom > .custom_link_product > .product_header_custom > .label_custom {
      font-size: 12px;
    }
  }

  @media screen and (max-width: 500px) {
    .netreviews_review_rate_and_stars {
      margin-top: 1rem;
    }

    .product_item_custom > .custom_link_product > .product_header_custom > .label_custom {
      padding: 0.25rem 1.5rem;
    }

    .product_item_custom > form > button,
    .product_item_custom > #custom_specific_product {
      margin: 0.5rem;
    }

    .product_item_custom > .custom_link_product {
      padding: 0.5rem;
    }

    .product_item_custom > button,
    .product_item_custom > #custom_specific_product,
    #notify_button_custom {
      margin: 0.5rem;
      line-height: normal;
    }
  }
</style>

<li class="product_item_custom">
  <a href="{{ product.url }}" class="custom_link_product">
    <div class="product_header_custom">
      {%- if product.price < product.compare_at_price -%}
        <span class="label_custom">
          -
          {{-
            product.compare_at_price
            | minus: product.price
            | times: 100.0
            | divided_by: product.compare_at_price
            | round
          -}}
          %</span
        >
      {%- endif -%}

      {% if product.tags contains 'Pack Poupança' %}
        <div>
          <h4>Pack</h4>
          <h6>Poupança</h6>
        </div>
      {% endif %}
    </div>

    <div class="image_and_div_wrapper">
      <img
        alt="{{ product.title }}"
        loading="lazy"
        src="{{ product.featured_image | image_url: width: 200 }}"
        width="200px"
        height="100%"
      >

      <div class="swym-button-bar swym-wishlist-button-bar swym-inject">
        <div class="swym-btn-container swym-inject" data-position="default" id="favorite_btn_custom">
          {% render 'swym-product-view', product: product %}

          <button
            class="swym-button swym-add-to-wishlist swym-inject swym-icon swym-heart swym-loaded"
            data-swaction="addToWishlist"
            data-product-id="{{ product.id | json }}"
            onclick="event.preventDefault();"
          ></button>
        </div>
      </div>
    </div>

    <h1>{{ product.title }}</h1>

    <div class="NETREVIEWS_PRODUCT_STARS" data-product-id="{{ product.id }}"></div>
    <div class="skeepers_product__stars" data-product-id="{{ product.id }}"></div>

    <div id="no_reviews_stars">
      <div>
        <span class="nr-icon nr-star grey"></span>
        <span class="nr-icon nr-star grey"></span>
        <span class="nr-icon nr-star grey"></span>
        <span class="nr-icon nr-star grey"></span>
        <span class="nr-icon nr-star grey"></span>
        <span class="no_reviews_label"> 0/5 - 0 Opiniões </span>
      </div>
    </div>

    <div id="prices_custom">
      <h2>{{ product.price | money_without_trailing_zeros }}</h2>

      {%- if product.price < product.compare_at_price -%}
        <h3>{{ product.compare_at_price | money_without_trailing_zeros }}</h3>
      {%- endif -%}
    </div>

    {%- assign units = product.metafields.PHC['Valor-Unidade'] | floor -%}
    {%- assign pvp = product.price -%}
    {%- assign pvp_per_unit = pvp | divided_by: units | money -%}

    {% unless units == blank or pvp_per_unit == blank or product.metafields.PHC['Unidade-Singular'] == blank %}
      <span id="pvp_custom">€{{ pvp_per_unit | split: '€' }} por {{ product.metafields.PHC['Unidade-Singular'] }}</span>
    {% endunless %}
  </a>

  {%- if product.available -%}
    <form method="post" action="{{ routes.cart_add_url }}">
      {%- if product.variants.size == 1 -%}
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

        <button
          type="submit"
          class="{{ quick_buy_classes }}"
          data-action="add-to-cart"
        >
          {%- if product.template_suffix == 'pre-order' -%}
            {{- 'collection.product.pre_order' | t -}}
          {%- else -%}
            <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M8.52975 17.136C8.52975 17.3274 8.47298 17.5146 8.36661 17.6738C8.26025 17.8329 8.10907 17.957 7.93219 18.0303C7.75531 18.1036 7.56068 18.1227 7.3729 18.0854C7.18513 18.048 7.01265 17.9558 6.87727 17.8204C6.74189 17.6851 6.6497 17.5126 6.61235 17.3248C6.575 17.137 6.59417 16.9424 6.66744 16.7655C6.7407 16.5887 6.86477 16.4375 7.02396 16.3311C7.18315 16.2247 7.3703 16.168 7.56175 16.168C7.81848 16.168 8.06469 16.27 8.24623 16.4515C8.42777 16.633 8.52975 16.8792 8.52975 17.136Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path d="M16.9829 17.136C16.9829 17.3274 16.9261 17.5146 16.8197 17.6738C16.7134 17.8329 16.5622 17.957 16.3853 18.0303C16.2084 18.1036 16.0138 18.1227 15.826 18.0854C15.6383 18.048 15.4658 17.9558 15.3304 17.8204C15.195 17.6851 15.1028 17.5126 15.0655 17.3248C15.0281 17.137 15.0473 16.9424 15.1206 16.7655C15.1938 16.5887 15.3179 16.4375 15.4771 16.3311C15.6363 16.2247 15.8234 16.168 16.0149 16.168C16.2716 16.168 16.5178 16.27 16.6994 16.4515C16.8809 16.633 16.9829 16.8792 16.9829 17.136Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              <path d="M1 1H4.258L6.441 11.083C6.53024 11.4428 6.74125 11.7605 7.03819 11.9824C7.33513 12.2042 7.69971 12.3164 8.07 12.3H15.987C16.3566 12.3167 16.7207 12.2052 17.0175 11.9843C17.3144 11.7635 17.5258 11.4468 17.616 11.088L18.916 4.77H5.072" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>

            <span>Adicionar</span>
          {%- endif -%}
        </button>
      {%- else -%}
        <a
          href="{{ product.url | within: collection }}"
          class="{{ quick_buy_classes }}"
          id="custom_specific_product"
        >
          <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M8.52975 17.136C8.52975 17.3274 8.47298 17.5146 8.36661 17.6738C8.26025 17.8329 8.10907 17.957 7.93219 18.0303C7.75531 18.1036 7.56068 18.1227 7.3729 18.0854C7.18513 18.048 7.01265 17.9558 6.87727 17.8204C6.74189 17.6851 6.6497 17.5126 6.61235 17.3248C6.575 17.137 6.59417 16.9424 6.66744 16.7655C6.7407 16.5887 6.86477 16.4375 7.02396 16.3311C7.18315 16.2247 7.3703 16.168 7.56175 16.168C7.81848 16.168 8.06469 16.27 8.24623 16.4515C8.42777 16.633 8.52975 16.8792 8.52975 17.136Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M16.9829 17.136C16.9829 17.3274 16.9261 17.5146 16.8197 17.6738C16.7134 17.8329 16.5622 17.957 16.3853 18.0303C16.2084 18.1036 16.0138 18.1227 15.826 18.0854C15.6383 18.048 15.4658 17.9558 15.3304 17.8204C15.195 17.6851 15.1028 17.5126 15.0655 17.3248C15.0281 17.137 15.0473 16.9424 15.1206 16.7655C15.1938 16.5887 15.3179 16.4375 15.4771 16.3311C15.6363 16.2247 15.8234 16.168 16.0149 16.168C16.2716 16.168 16.5178 16.27 16.6994 16.4515C16.8809 16.633 16.9829 16.8792 16.9829 17.136Z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M1 1H4.258L6.441 11.083C6.53024 11.4428 6.74125 11.7605 7.03819 11.9824C7.33513 12.2042 7.69971 12.3164 8.07 12.3H15.987C16.3566 12.3167 16.7207 12.2052 17.0175 11.9843C17.3144 11.7635 17.5258 11.4468 17.616 11.088L18.916 4.77H5.072" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>

          <span>Adicionar</span>
        </a>
      {%- endif -%}
    </form>
  {%- else -%}
    {% unless product.available %}
      <a
        href="#"
        class="SI_trigger {{ quick_buy_classes }} notify_button_collection"
        data-product-data="{{ product | json | escape }}"
        id="notify_button_custom"
      >
        <svg
          stroke="currentColor"
          fill="currentColor"
          stroke-width="0"
          viewBox="0 0 448 512"
          height="18px"
          width="18px"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path d="M439.39 362.29c-19.32-20.76-55.47-51.99-55.47-154.29 0-77.7-54.48-139.9-127.94-155.16V32c0-17.67-14.32-32-31.98-32s-31.98 14.33-31.98 32v20.84C118.56 68.1 64.08 130.3 64.08 208c0 102.3-36.15 133.53-55.47 154.29-6 6.45-8.66 14.16-8.61 21.71.11 16.4 12.98 32 32.1 32h383.8c19.12 0 32-15.6 32.1-32 .05-7.55-2.61-15.27-8.61-21.71zM67.53 368c21.22-27.97 44.42-74.33 44.53-159.42 0-.2-.06-.38-.06-.58 0-61.86 50.14-112 112-112s112 50.14 112 112c0 .2-.06.38-.06.58.11 85.1 23.31 131.46 44.53 159.42H67.53zM224 512c35.32 0 63.97-28.65 63.97-64H160.03c0 35.35 28.65 64 63.97 64z"></path>
        </svg>

        NOTIFICAR
      </a>
    {% endunless %}
  {%- endif -%}
</li>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const productDivs = document.querySelectorAll('.product_item_custom');

    function checkReviews() {
      productDivs.forEach((div) => {
        const starsContainer = div.querySelector('.NETREVIEWS_PRODUCT_STARS');
        const skeepersContainer = div.querySelector('.skeepers_product__stars');
        const noReviewsFallback = div.querySelector('#no_reviews_stars');

        if (starsContainer) {
          const observer = new MutationObserver(() => {
            if (starsContainer.innerHTML.trim() === '') {
              noReviewsFallback.style.display = 'block';

              starsContainer.style.display = 'none';
              if (skeepersContainer) {
                skeepersContainer.style.display = 'none';
              }
            } else {
              noReviewsFallback.style.display = 'none';
              starsContainer.style.display = 'block';
              if (skeepersContainer) {
                skeepersContainer.style.display = 'block';
              }
            }
          });

          observer.observe(starsContainer, { childList: true, subtree: true });

          setTimeout(() => {
            if (starsContainer.innerHTML.trim() === '') {
              noReviewsFallback.style.display = 'block';
              starsContainer.style.display = 'none';
              if (skeepersContainer) {
                skeepersContainer.style.display = 'none';
              }
            }
          }, 2000);
        }
      });
    }

    checkReviews();
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const LOADER_ID = 'loader';

    function showLoader() {
      const loader = document.getElementById(LOADER_ID);
      if (!loader) return;
      loader.style.display = 'block';
      loader.style.width = '0%';
      setTimeout(() => {
        loader.style.width = '30%';
      }, 100);
    }

    function hideLoader() {
      const loader = document.getElementById(LOADER_ID);
      if (!loader) return;
      loader.style.width = '100%';
      setTimeout(() => {
        loader.style.display = 'none';
        loader.style.width = '0%';
      }, 400);
    }

    function bindCartForms(root = document) {
      const forms = root.querySelectorAll("form[action='/cart/add']:not([data-cart-bound='1'])");
      forms.forEach((form) => {
        // Marca para impedir múltiplos listeners no mesmo form
        form.setAttribute('data-cart-bound', '1');

        let locked = false;

        form.addEventListener('submit', async function onSubmit(e) {
          e.preventDefault();

          if (locked) return; // evita submits paralelos
          locked = true;

          const btn = form.querySelector("button[type='submit']");
          btn?.setAttribute('disabled', 'disabled');

          try {
            const fd = new FormData(form);
            const variantId = fd.get('id');
            if (!variantId) throw new Error('Sem variante selecionada (id em falta).');

            showLoader();

            const addOnce = () =>
              fetch('/cart/add.js', {
                method: 'POST',
                headers: { Accept: 'application/json' },
                body: fd,
              });

            let res = await addOnce();

            // Retry leve para conflito momentâneo
            if (res.status === 409) {
              await fetch('/cart.js', { headers: { Accept: 'application/json' } });
              res = await addOnce();
            }

            if (!res.ok) {
              const err = await res.json().catch(() => ({}));
              throw new Error(err.message || err.description || 'Erro ao adicionar ao carrinho.');
            }

            // === Mantém EXATAMENTE a tua lógica de estilos no mini-cart ===
            const html = await fetch(`/cart?view=mini-cart&timestamp=${Date.now()}`).then((r) => {
              if (!r.ok) throw new Error('Erro ao obter carrinho');
              return r.text();
            });

            if (html) {
              const carts = document.querySelectorAll('#mini-cart');

              if (carts) {
                carts.forEach((cart) => (cart.innerHTML = html));

                if (innerWidth >= 2559) {
                  carts.forEach((cart) => (cart.style.marginRight = '17vw'));
                }

                if (innerWidth < 2559 && innerWidth >= 1499) {
                  carts.forEach((cart) => (cart.style.marginRight = '8vw'));
                }

                if (innerWidth < 1499 && innerWidth >= 1000) {
                  carts.forEach((cart) => (cart.style.marginRight = '2vw'));
                }

                if (innerWidth >= 1000) {
                  carts.forEach((cart) => (cart.style.top = '4.85rem'));
                }

                if (innerWidth < 1000) {
                  carts.forEach((cart) => {
                    cart.style.transform = 'scale(1)';
                    cart.style.maxHeight = 'calc(100vh - 40px)';
                    cart.style.padding = '1rem 1rem 2rem 1rem';
                  });

                  // Mantendo a mesma intenção (aplicar padding aos <a>)
                  const asAll = [];
                  carts.forEach((cart) => {
                    const as = cart.querySelectorAll('a');
                    as.forEach((a) => {
                      a.style.padding = '0 1rem';
                      asAll.push(a);
                    });
                  });
                } else {
                  carts.forEach((cart) => {
                    cart.style.visibility = 'visible';
                    cart.style.opacity = 1;
                  });
                }
              }
            }
            // === Fim da tua lógica de estilos mantida ===

            // Atualiza contador do carrinho (sem mexer no styling)
            const cartData = await fetch('/cart.js', { headers: { Accept: 'application/json' } }).then((r) => r.json());
            const counters = document.querySelectorAll('.header__cart-count');
            if (counters) counters.forEach((el) => (el.innerText = cartData.item_count));
          } catch (err) {
            console.error('Erro ao adicionar ao carrinho:', err);
            alert(err.message || 'Erro ao adicionar ao carrinho.');
          } finally {
            hideLoader();
            btn?.removeAttribute('disabled');
            locked = false;
          }
        });
      });
    }

    // Liga nos forms existentes
    bindCartForms(document);

    // Re-liga apenas em nós novos (se o tema re-renderizar secções)
    const mo = new MutationObserver((mutations) => {
      for (const m of mutations) {
        m.addedNodes.forEach((node) => {
          if (!(node instanceof HTMLElement)) return;
          if (node.matches && node.matches("form[action='/cart/add']")) {
            bindCartForms(node.parentElement || node);
          } else if (node.querySelector) {
            bindCartForms(node);
          }
        });
      }
    });
    mo.observe(document.documentElement, { childList: true, subtree: true });
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const divs = document.querySelectorAll('.image_and_div_wrapper > div');

    divs.forEach((div) => {
      div.addEventListener('click', function (event) {
        event.stopPropagation();
      });
    });
  });
</script>
