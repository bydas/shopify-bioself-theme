<style>
  #blog_posts_custom {
    display: grid;
    grid-auto-rows: max-content;
    grid-auto-flow: row;
    gap: 2rem;
    margin: 2rem var(--desktop-container-gutter);
  }

  #blog_posts_custom > h1 {
    margin: 0;
    padding: 0;
    font-size: 2rem;
    text-align: left;
    line-height: normal;
    text-transform: uppercase;
  }

  #blog_posts_custom > ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));
    gap: 2rem;
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  #blog_posts_custom > ul > li {
    display: grid;
    padding: 0;
    margin: 0;
  }

  #blog_posts_custom > .see_all_btn {
    border: 1px solid #258439;
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    color: #258439;
    font-weight: 700 !important;
    font-size: 1.25rem;
    cursor: pointer;
    width: max-content;
    justify-self: center;
    transition: all 0.15s ease;
    background-color: transparent;
  }

  #blog_posts_custom > .see_all_btn:hover {
    background-color: #258439;
    color: white;
  }

  #blog_posts_custom > ul > li > a {
    display: grid;
    grid-auto-rows: max-content;
    grid-auto-flow: row;
    border-radius: 1rem;
    border: 1px solid #258439;
    padding: 0;
    margin: 0;
    cursor: pointer;
    transition: all 0.15s ease;
    position: relative;
  }

  #blog_posts_custom > ul > li > a > div > div > span {
    padding: 0.25rem 1rem;
    background-color: #258439;
    border-radius: 2rem;
    font-weight: 700 !important;
    color: white;
    width: max-content;
  }

  #blog_posts_custom > ul > li > a:hover {
    transform: translateY(-10px);
  }

  #blog_posts_custom > ul > li > a > div > div {
    display: grid;
    grid-template-columns: repeat(2, max-content);
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
    padding: 1rem;
  }

  #blog_posts_custom > ul > li > a > div {
    width: 100%;
    min-height: 240px;
    border-radius: 1rem 1rem 0 0;
  }

  #blog_posts_custom > ul > li > a > h4 {
    padding: 1rem;
    font-weight: 700 !important;
    font-size: 1.25rem;
    line-height: normal;
    margin: 0;
  }

  @media screen and (max-width: 1599px) and (min-width: 1000px) {
    #blog_posts_custom > h1 {
      font-size: 1.5rem;
    }
  }

  @media screen and (min-width: 1499px) {
    #blog_posts_custom {
      margin: 2rem 9vw;
    }
  }

  @media screen and (min-width: 2559px) {
    #blog_posts_custom {
      margin: 2rem 18vw;
    }
  }

  @media screen and (max-width: 1000px) {
    #blog_posts_custom {
      margin: 1rem var(--mobile-container-gutter);
      gap: 1rem;
    }

    #blog_posts_custom > h1 {
      font-size: 1.25rem;
    }
  }

  @media screen and (max-width: 415px) {
    #blog_posts_custom > ul {
      grid-auto-rows: max-content;
      grid-auto-flow: row;
      grid-template-columns: unset;
    }
  }

  @media screen and (max-width: 369px) {
    #blog_posts_custom > ul > li > a > div > div {
      grid-template-columns: 1fr;
    }
  }
</style>

<section
  id="blog_posts_custom"
  data-blog-handle="{{ section.settings.selected-blog.handle }}"
  data-next-cursor=""
  data-has-next="true"
  data-selected-img="{{ section.settings.selected_img | image_url: width: 160 }}"
>
  {% unless section.settings.title == blank %}
    <h1>{{ section.settings.title }}</h1>
  {% endunless %}

  {% unless section.settings['selected-blog'] == blank %}
    <ul id="blogPostsList">
      {% for post in section.settings['selected-blog'].articles limit: 8 %}
        {% assign post_tag = '' %}
        {% for tag in post.tags %}
          {% unless tag contains 'author'
            or tag contains 'dificuldade'
            or tag contains 'doses'
            or tag contains 'duracao'
          %}
            {% assign post_tag = tag %}
            {% break %}
          {% endunless %}
        {% endfor %}
        <li>
          <a href="{{ post.url }}">
            <div style="background-size:cover;background-position:center center;background-image:url({{ post.image | img_url: 'master' }})">
              <div>
                {% if post_tag != '' -%}
                  <span>{{ post_tag }}</span>
                {%- endif %}
                {% if post.author == 'Rita Silva' %}
                  {% render 'rita-silva-icon-custom-2', img: section.settings.selected_img %}
                {% endif %}
              </div>
            </div>
            <h4>{{ post.title }}</h4>
          </a>
        </li>
      {% endfor %}
    </ul>

    {% if section.settings['selected-blog'].articles_count > 8 %}
      <button class="see_all_btn" id="loadMoreBtn">
        {{ section.settings.btn_text }}
      </button>
    {% endif %}
  {% endunless %}
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const sectionEl = document.getElementById('blog_posts_custom');
    const blogHandle = sectionEl.dataset.blogHandle;
    const selectedImg = sectionEl.dataset.selectedImg; // imagem da section
    const loadMoreBtn = document.getElementById('loadMoreBtn');
    const blogPostsList = document.getElementById('blogPostsList');

    if (!loadMoreBtn) return;

    const STOREFRONT_ENDPOINT = '/api/2024-07/graphql.json';
    const STOREFRONT_TOKEN = 'bfe1eb076dd1eeff39af26ba722acebf';

    const query = `
    query BlogArticles($handle: String!, $pageSize: Int!, $after: String) {
      blogByHandle(handle: $handle) {
        id
        title
        articles(first: $pageSize, after: $after, reverse: false) {
          pageInfo { hasNextPage endCursor }
          edges {
            node {
              id
              title
              handle
              tags
              onlineStoreUrl
              image { url altText }
              authorV2 { name }
            }
          }
        }
      }
    }
  `;

    async function fetchArticles(afterCursor) {
      const variables = {
        handle: blogHandle,
        pageSize: 8,
        after: afterCursor || null,
      };
      const res = await fetch(STOREFRONT_ENDPOINT, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-Shopify-Storefront-Access-Token': STOREFRONT_TOKEN,
          Accept: 'application/json',
        },
        body: JSON.stringify({ query, variables }),
      });

      if (!res.ok) throw new Error('Storefront API error: ' + res.status);
      const json = await res.json();
      if (json.errors) throw new Error(JSON.stringify(json.errors));
      return json.data.blogByHandle.articles;
    }

    function firstEligibleTag(tags) {
      if (!tags || !tags.length) return '';
      const skip = ['author', 'dificuldade', 'doses', 'duracao'];
      const t = tags.find((tg) => !skip.some((s) => tg.toLowerCase().includes(s)));
      return t || tags[0] || '';
    }

    function renderArticle(node) {
      const li = document.createElement('li');
      const url = node.onlineStoreUrl || `/blogs/${blogHandle}/${node.handle}`;
      const bg = node.image?.url || '';

      const tag = firstEligibleTag(node.tags || []);
      const author = node.authorV2?.name || '';

      li.innerHTML = `
      <a href="${url}">
        <div style="background-size:cover;background-position:center center;background-image:url(${bg})">
          <div>
            ${tag ? `<span>${tag}</span>` : ''}
            ${
              author === 'Rita Silva' && selectedImg
                ? `{% render 'rita-silva-icon-custom-2', img: section.settings.selected_img %}`
                : ''
            }
          </div>
        </div>
        <h4>${node.title}</h4>
      </a>
    `;
      return li;
    }

    loadMoreBtn.addEventListener('click', async () => {
      if (sectionEl.dataset.hasNext === 'false') return;

      loadMoreBtn.disabled = true;
      loadMoreBtn.textContent = 'Carregando...';

      try {
        const after = sectionEl.dataset.nextCursor || null;
        const articles = await fetchArticles(after);

        const edges = articles.edges || [];
        edges.forEach((edge) => blogPostsList.appendChild(renderArticle(edge.node)));

        const { hasNextPage, endCursor } = articles.pageInfo;
        sectionEl.dataset.hasNext = hasNextPage ? 'true' : 'false';
        sectionEl.dataset.nextCursor = hasNextPage ? endCursor : '';

        if (hasNextPage) {
          loadMoreBtn.disabled = false;
          loadMoreBtn.textContent = '{{ section.settings.btn_text | escape }}';
        } else {
          loadMoreBtn.remove();
        }
      } catch (e) {
        console.error(e);
        loadMoreBtn.disabled = false;
        loadMoreBtn.textContent = '{{ section.settings.btn_text | escape }}';
      }
    });
  });
</script>

{% schema %}
{
  "name": "Blog posts custom",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Título"
    },
    {
      "type": "image_picker",
      "id": "selected_img",
      "label": "Imagem da Rita"
    },
    {
      "type": "blog",
      "id": "selected-blog",
      "label": "Selecione o blog"
    },
    {
      "type": "text",
      "id": "btn_text",
      "label": "Texto do botão",
      "default": "Ver mais publicações"
    }
  ],
  "presets": [
    {
      "name": "Blog posts custom",
      "category": "Blog"
    }
  ]
}
{% endschema %}
