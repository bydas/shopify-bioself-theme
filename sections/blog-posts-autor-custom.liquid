<style>
  #blog_posts_custom {
    display: grid;
    grid-auto-rows: max-content;
    grid-auto-flow: row;
    gap: 2rem;
    margin: 2rem var(--desktop-container-gutter);
  }

  #blog_posts_custom > h1 {
    margin: 0;
    padding: 0;
    font-size: 2rem;
    text-align: left;
    line-height: normal;
    text-transform: uppercase;
  }

  #blog_posts_custom > ul {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(360px, 1fr));
    gap: 2rem;
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  #blog_posts_custom > ul > li {
    display: grid;
    padding: 0;
    margin: 0;
  }

  #blog_posts_custom > .see_all_btn {
    border: 1px solid #258439;
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    color: #258439;
    font-weight: 700 !important;
    font-size: 1rem;
    cursor: pointer;
    width: max-content;
    justify-self: center;
    transition: all 0.15s ease;
    background-color: transparent;
  }

  #blog_posts_custom > .see_all_btn:hover {
    background-color: #258439;
    color: white;
  }

  #blog_posts_custom > ul > li > a {
    display: grid;
    grid-auto-rows: max-content;
    grid-auto-flow: row;
    border-radius: 1rem;
    border: 1px solid #258439;
    padding: 0;
    margin: 0;
    cursor: pointer;
    transition: all 0.15s ease;
    position: relative;
  }

  #blog_posts_custom > ul > li > a > span {
    position: absolute;
    top: 1rem;
    left: 1rem;
    padding: 0.25rem 1rem;
    background-color: #258439;
    border-radius: 2rem;
    font-weight: 700 !important;
    color: white;
  }

  #blog_posts_custom > ul > li > a:hover {
    transform: translateY(-10px);
  }

  #blog_posts_custom > ul > li > a > div {
    width: 100%;
    min-height: 240px;
    border-radius: 1rem 1rem 0 0;
  }

  #blog_posts_custom > ul > li > a > h4 {
    padding: 1rem;
    font-weight: 700 !important;
    font-size: 1rem;
    line-height: normal;
    margin: 0;
  }

  @media screen and (max-width: 1599px) and (min-width: 1000px) {
    #blog_posts_custom > h1 {
      font-size: 1.5rem;
    }
  }

  @media screen and (min-width: 1499px) {
    #blog_posts_custom {
      margin: 2rem 9vw;
    }
  }

  @media screen and (min-width: 2559px) {
    #blog_posts_custom {
      margin: 2rem 18vw;
    }
  }

  @media screen and (max-width: 1000px) {
    #blog_posts_custom {
      margin: 1rem var(--mobile-container-gutter);
    }

    #blog_posts_custom > h1 {
      font-size: 1.25rem;
    }
  }

  @media screen and (max-width: 415px) {
    #blog_posts_custom > ul {
      grid-auto-rows: max-content;
      grid-auto-flow: row;
      grid-template-columns: unset;
    }
  }
</style>

{% assign all_rita_articles = '' | split: ',' %}
{% assign total_pages = blog.articles_count | divided_by: 50.0 | ceil %}

{% for page in (1..total_pages) %}
  {% paginate blog.articles by 50 | page: page %}
    {% for article in paginate.collection %}
      {% if article.author == 'Rita Silva' %}
        {% assign all_rita_articles = all_rita_articles | concat: [article] %}
      {% endif %}
    {% endfor %}
  {% endpaginate %}
{% endfor %}

<section
  id="blog_posts_custom"
  data-blog-handle="{{ blog.handle }}"
  data-next-page="2"
  data-total-pages="{{ all_rita_articles.size | divided_by: 4.0 | ceil }}"
>
  {% unless section.settings.title == blank %}
    <h1>{{ section.settings.title }}</h1>
  {% endunless %}

  {% unless all_rita_articles == blank %}
    <ul id="blogPostsList">
      {% for post in all_rita_articles limit: 4 %}
        {% for tag in post.tags %}
          {% unless tag contains 'author'
            or tag contains 'dificuldade'
            or tag contains 'doses'
            or tag contains 'duracao'
          %}
            {% assign post_tag = tag %}
            {% break %}
          {% endunless %}
        {% endfor %}

        <li>
          <a href="{{ post.url }}">
            <div style="background-image: url({{ post.image | img_url: 'master' }})"></div>
            <h4>{{ post.title }}</h4>
            <span>{{ post_tag }}</span>
          </a>
        </li>
      {% endfor %}
    </ul>

    {% if all_rita_articles.articles_count > 4 %}
      <button class="see_all_btn" id="loadMoreBtn">
        {{ section.settings.btn_text }}
      </button>
    {% endif %}
  {% endunless %}
</section>

<script>
  // Adicione esta variável global para armazenar os artigos
  window.ritaArticles = [
    {% for article in all_rita_articles %}
      {
        title: {{ article.title | json }},
        url: {{ article.url | json }},
        image: {{ article.image | img_url: 'master' | json }},
        tags: {{ article.tags | json }}
      }{% unless forloop.last %},{% endunless %}
    {% endfor %}
  ];
</script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const section = document.getElementById('blog_posts_custom');
    const loadMoreBtn = document.getElementById('loadMoreBtn');

    if (!loadMoreBtn) return;

    loadMoreBtn.addEventListener('click', () => {
      const nextPage = parseInt(section.dataset.nextPage);
      const perPage = 4;
      const startIndex = (nextPage - 1) * perPage;
      const endIndex = startIndex + perPage;

      // Cria elementos a partir dos dados já carregados
      const fragment = document.createDocumentFragment();

      window.ritaArticles.slice(startIndex, endIndex).forEach((article) => {
        // Encontra a primeira tag relevante (como no seu loop original)
        const relevantTag = article.tags.find(
          (tag) => !['author', 'dificuldade', 'doses', 'duracao'].some((forbidden) => tag.includes(forbidden))
        );

        const li = document.createElement('li');
        li.innerHTML = `
      <a href="${article.url}">
        <div style="background-image: url(${article.image})"></div>
        <h4>${article.title}</h4>
        ${relevantTag ? `<span>${relevantTag}</span>` : ''}
      </a>
    `;
        fragment.appendChild(li);
      });

      document.getElementById('blogPostsList').appendChild(fragment);

      // Atualiza paginação
      section.dataset.nextPage = nextPage + 1;
      if (endIndex >= window.ritaArticles.length) {
        loadMoreBtn.remove();
      }
    });
  });
</script>

{% schema %}
{
  "name": "Blog posts custom autor",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Título"
    },
    {
      "type": "blog",
      "id": "selected-blog",
      "label": "Selecione o blog"
    },
    {
      "type": "text",
      "id": "btn_text",
      "label": "Texto do botão",
      "default": "Ver mais publicações"
    }
  ],
  "presets": [
    {
      "name": "Blog posts custom autor",
      "category": "Blog"
    }
  ]
}
{% endschema %}
